{"version":3,"sources":["Navbar.js","Home.js","Create.js","NotFound.js","App.js","index.js"],"names":["Navbar","conditionList","clear","uncond","className","to","Array","from","map","cond","onClick","Home","data","condition","id","company","logo","isNew","new","featured","position","postedAt","role","level","contract","location","languages","tools","src","alt","lan","idx","toString","Create","useState","title","setTitle","body","setBody","author","setAuthor","history","useHistory","onSubmit","e","preventDefault","blog","fetch","method","headers","JSON","stringify","then","push","type","required","value","onChange","target","NotFound","App","initialData","setData","Set","setConditionList","console","log","newConditionList","delete","conds","newData","forEach","filter","job","includes","exact","path","prev","add","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05721b72.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\r\n\r\nconst Navbar = ({ conditionList, clear, uncond }) => {\r\n  return (\r\n    <nav className='navbar'>\r\n      <nav className='nav'>\r\n        <h1>FIND-JOB-LIST</h1>\r\n        <div className='links'>\r\n          <Link to='/'>Home</Link>\r\n        </div>\r\n      </nav>\r\n      <div className='searchbar'>\r\n        {Array.from(conditionList).map((cond) => (\r\n          <button onClick={() => uncond(cond)} key={cond}>\r\n            {cond}\r\n          </button>\r\n        ))}\r\n        <div className='clear'>\r\n          <button onClick={clear}>clear</button>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","const Home = ({ data, condition }) => {\r\n  return (\r\n    <div className='home'>\r\n      {data &&\r\n        data.map(\r\n          ({\r\n            id,\r\n            company,\r\n            logo,\r\n            new: isNew,\r\n            featured,\r\n            position,\r\n            role,\r\n            level,\r\n            postedAt,\r\n            contract,\r\n            location,\r\n            languages,\r\n            tools,\r\n          }) => (\r\n            <div className='section split' key={id.toString()}>\r\n              <img src={logo} alt='' className='icon' />\r\n              <div className='content split'>\r\n                <div className='file'>\r\n                  <div className='up'>\r\n                    <p>{company}</p>\r\n                    {isNew && <p>New!</p>}\r\n                    {featured && <p>Featured</p>}\r\n                  </div>\r\n                  <div className='mid'>\r\n                    <p>{position}</p>\r\n                  </div>\r\n                  <div className='down'>\r\n                    <p>{postedAt}</p>\r\n                    <p>{contract}</p>\r\n                    <p>{location}</p>\r\n                  </div>\r\n                </div>\r\n                <div className='skills split'>\r\n                  {languages.map((lan, idx) => (\r\n                    <button onClick={() => condition(lan)} key={`lan + ${idx}`}>\r\n                      {lan}\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )\r\n        )}\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","import { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Create = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [body, setBody] = useState('');\r\n  const [author, setAuthor] = useState('mario');\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const blog = { title, body, author };\r\n\r\n    fetch('http://localhost:8000/blogs/', {\r\n      method: 'POST',\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(blog)\r\n    }).then(() => {\r\n      // history.go(-1);\r\n      history.push('/');\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"create\">\r\n      <h2>Add a New Blog</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>Blog title:</label>\r\n        <input \r\n          type=\"text\" \r\n          required \r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n        <label>Blog body:</label>\r\n        <textarea\r\n          required\r\n          value={body}\r\n          onChange={(e) => setBody(e.target.value)}\r\n        ></textarea>\r\n        <label>Blog author:</label>\r\n        <select\r\n          value={author}\r\n          onChange={(e) => setAuthor(e.target.value)}\r\n        >\r\n          <option value=\"mario\">mario</option>\r\n          <option value=\"yoshi\">yoshi</option>\r\n        </select>\r\n        <button>Add Blog</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default Create;","import { Link } from \"react-router-dom\"\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div className=\"not-found\">\r\n      <h2>Sorry</h2>\r\n      <p>That page cannot be found</p>\r\n      <Link to=\"/\">Back to the homepage...</Link>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default NotFound;","import Navbar from './Navbar';\r\nimport Home from './Home';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Create from './Create';\r\nimport NotFound from './NotFound';\r\nimport { useState } from 'react';\r\nimport initialData from './data.json';\r\nfunction App() {\r\n  const [data, setData] = useState(initialData);\r\n  const [conditionList, setConditionList] = useState(new Set());\r\n  const clear = () => {\r\n    console.log('clear');\r\n    setData(initialData);\r\n    setConditionList(new Set());\r\n  };\r\n  const uncond = (cond) => {\r\n    const newConditionList = new Set([...conditionList]);\r\n    newConditionList.delete(cond);\r\n    setConditionList(newConditionList);\r\n\r\n    const conds = Array.from(newConditionList);\r\n    setData(initialData);\r\n\r\n    let newData = initialData;\r\n\r\n    conds.forEach((cond) => {\r\n      newData = initialData.filter((job) => job.languages.includes(cond));\r\n    });\r\n\r\n    setData(newData);\r\n  };\r\n  const condition = (lan) => {\r\n    const newData = data.filter((job) => job.languages.includes(lan));\r\n    setData(newData);\r\n    setConditionList((prev) => new Set(prev.add(lan)));\r\n  };\r\n  return (\r\n    <Router>\r\n      <div className='App'>\r\n        <Navbar conditionList={conditionList} clear={clear} uncond={uncond} />\r\n        <Switch>\r\n          <Route exact path='/'>\r\n            <Home data={data} condition={condition} />\r\n          </Route>\r\n          <Route path='/new'>\r\n            <Create />\r\n          </Route>\r\n          <Route path='*'>\r\n            <NotFound />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}